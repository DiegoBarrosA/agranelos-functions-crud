name: CI - Build and Test

on:
  push:
    branches: [ main, develop, sumativa-3-staging ]
  pull_request:
    branches: [ main, develop, sumativa-3-staging ]
  workflow_dispatch:

env:
  JAVA_VERSION: '11'

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SSL_MODE: 'disable'
    
    steps:
    - name: '📥 Checkout repository'
      uses: actions/checkout@v3

    - name: '☕ Setup Java JDK ${{ env.JAVA_VERSION }}'
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: '🔍 Display Maven version'
      run: mvn -version

    - name: '📦 Build with Maven'
      run: |
        echo "Building the project..."
        mvn clean package -DskipTests
        echo "✅ Build completed successfully!"

    - name: '📂 List build artifacts'
      run: |
        echo "Contents of target directory:"
        ls -lh target/
        echo ""
        echo "Contents of azure-functions directory:"
        ls -lh target/azure-functions/

    - name: '✅ Build Summary'
      if: success()
      run: |
        echo "================================"
        echo "✅ BUILD SUCCESSFUL"
        echo "================================"
        echo "Java Version: ${{ env.JAVA_VERSION }}"
        echo "Maven Build: SUCCESS"
        echo "Artifacts: Generated in target/"
        echo "================================"

    - name: '❌ Build Failed'
      if: failure()
      run: |
        echo "================================"
        echo "❌ BUILD FAILED"
        echo "================================"
        echo "Please check the logs above for details"
        echo "================================"

  verify-structure:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: '📥 Checkout repository'
      uses: actions/checkout@v3

    - name: '☕ Setup Java JDK ${{ env.JAVA_VERSION }}'
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: '📦 Build project'
      run: mvn clean package -DskipTests

    - name: '🔍 Verify Azure Functions structure'
      run: |
        echo "Verifying Azure Functions structure..."
        
        FUNCTION_DIR="target/azure-functions/inventario-functions-create-20250830112014764"
        
        if [ ! -d "$FUNCTION_DIR" ]; then
          echo "❌ Azure Functions directory not found!"
          exit 1
        fi
        
        echo "✅ Azure Functions directory exists"
        
        # Check for required files
        files=("host.json" "local.settings.json" "inventario-functions-create-1.0-SNAPSHOT.jar")
        for file in "${files[@]}"; do
          if [ -f "$FUNCTION_DIR/$file" ]; then
            echo "✅ $file found"
          else
            echo "❌ $file not found"
            exit 1
          fi
        done
        
        # Check for function directories
        functions=("CreateProducto" "GetProductos" "GetProductoById" "UpdateProducto" "DeleteProducto" 
                   "CreateBodega" "GetBodegas" "GetBodegaById" "UpdateBodega" "DeleteBodega" 
                   "GraphQL" "InitializeDatabase")
        
        for func in "${functions[@]}"; do
          if [ -d "$FUNCTION_DIR/$func" ]; then
            echo "✅ Function $func exists"
            if [ -f "$FUNCTION_DIR/$func/function.json" ]; then
              echo "  ✅ function.json found"
            else
              echo "  ❌ function.json not found"
              exit 1
            fi
          else
            echo "❌ Function $func not found"
            exit 1
          fi
        done
        
        echo ""
        echo "================================"
        echo "✅ ALL VERIFICATIONS PASSED"
        echo "================================"

  check-event-grid-integration:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: '📥 Checkout repository'
      uses: actions/checkout@v3

    - name: '🔍 Verify Event Grid integration files'
      run: |
        echo "Checking Event Grid integration..."
        
        # Check event classes
        if [ -f "src/main/java/com/agranelos/inventario/events/EventType.java" ]; then
          echo "✅ EventType.java exists"
        else
          echo "❌ EventType.java not found"
          exit 1
        fi
        
        if [ -f "src/main/java/com/agranelos/inventario/events/EventGridPublisher.java" ]; then
          echo "✅ EventGridPublisher.java exists"
        else
          echo "❌ EventGridPublisher.java not found"
          exit 1
        fi
        
        if [ -f "src/main/java/com/agranelos/inventario/events/EventGridConsumer.java" ]; then
          echo "✅ EventGridConsumer.java exists"
        else
          echo "❌ EventGridConsumer.java not found"
          exit 1
        fi
        
        if [ -f "src/main/java/com/agranelos/inventario/events/ProductoEventData.java" ]; then
          echo "✅ ProductoEventData.java exists"
        else
          echo "❌ ProductoEventData.java not found"
          exit 1
        fi
        
        if [ -f "src/main/java/com/agranelos/inventario/events/BodegaEventData.java" ]; then
          echo "✅ BodegaEventData.java exists"
        else
          echo "❌ BodegaEventData.java not found"
          exit 1
        fi
        
        echo ""
        echo "================================"
        echo "✅ EVENT GRID FILES VERIFIED"
        echo "================================"

  check-dependencies:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: '📥 Checkout repository'
      uses: actions/checkout@v3

    - name: '☕ Setup Java JDK ${{ env.JAVA_VERSION }}'
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: '🔍 Check Maven dependencies'
      run: |
        echo "Checking Maven dependencies..."
        mvn dependency:tree
        
        echo ""
        echo "Verifying critical dependencies..."
        
        # Check for Azure Event Grid
        if mvn dependency:tree | grep -q "azure-messaging-eventgrid"; then
          echo "✅ Azure Event Grid dependency found"
        else
          echo "❌ Azure Event Grid dependency not found"
          exit 1
        fi
        
        # Check for Azure Identity
        if mvn dependency:tree | grep -q "azure-identity"; then
          echo "✅ Azure Identity dependency found"
        else
          echo "❌ Azure Identity dependency not found"
          exit 1
        fi
        
        # Check for PostgreSQL
        if mvn dependency:tree | grep -q "postgresql"; then
          echo "✅ PostgreSQL dependency found"
        else
          echo "❌ PostgreSQL dependency not found"
          exit 1
        fi
        
        # Check for GraphQL
        if mvn dependency:tree | grep -q "graphql-java"; then
          echo "✅ GraphQL dependency found"
        else
          echo "❌ GraphQL dependency not found"
          exit 1
        fi
        
        echo ""
        echo "================================"
        echo "✅ ALL DEPENDENCIES VERIFIED"
        echo "================================"

  documentation-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: '📥 Checkout repository'
      uses: actions/checkout@v3

    - name: '📚 Verify documentation files'
      run: |
        echo "Checking documentation..."
        
        files=("README.md" "docs/ARQUITECTURA.md" "docs/DEPLOY.md" 
               "azure-deploy.json" "azure-deploy.parameters.json" 
               "scripts/deploy-azure.sh")
        
        for file in "${files[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ $file exists"
          else
            echo "❌ $file not found"
            exit 1
          fi
        done
        
        # Check if deploy script is executable
        if [ -x "scripts/deploy-azure.sh" ]; then
          echo "✅ deploy-azure.sh is executable"
        else
          echo "⚠️ deploy-azure.sh is not executable (will be fixed in deployment)"
        fi
        
        echo ""
        echo "================================"
        echo "✅ DOCUMENTATION VERIFIED"
        echo "================================"

  summary:
    runs-on: ubuntu-latest
    needs: [build, verify-structure, check-event-grid-integration, check-dependencies, documentation-check]
    if: always()
    
    steps:
    - name: '📊 Test Summary'
      run: |
        echo "╔════════════════════════════════════════════════════════════╗"
        echo "║          CI/CD PIPELINE - TEST SUMMARY                    ║"
        echo "╚════════════════════════════════════════════════════════════╝"
        echo ""
        echo "Repository: agranelos-functions-crud"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Triggered by: ${{ github.event_name }}"
        echo ""
        echo "Jobs Status:"
        echo "  • Build: ${{ needs.build.result }}"
        echo "  • Verify Structure: ${{ needs.verify-structure.result }}"
        echo "  • Event Grid Integration: ${{ needs.check-event-grid-integration.result }}"
        echo "  • Dependencies Check: ${{ needs.check-dependencies.result }}"
        echo "  • Documentation Check: ${{ needs.documentation-check.result }}"
        echo ""
        
        if [ "${{ needs.build.result }}" == "success" ] && \
           [ "${{ needs.verify-structure.result }}" == "success" ] && \
           [ "${{ needs.check-event-grid-integration.result }}" == "success" ] && \
           [ "${{ needs.check-dependencies.result }}" == "success" ] && \
           [ "${{ needs.documentation-check.result }}" == "success" ]; then
          echo "╔════════════════════════════════════════════════════════════╗"
          echo "║               ✅ ALL TESTS PASSED!                         ║"
          echo "║          Sistema listo para despliegue en Azure            ║"
          echo "╚════════════════════════════════════════════════════════════╝"
          exit 0
        else
          echo "╔════════════════════════════════════════════════════════════╗"
          echo "║               ❌ SOME TESTS FAILED                         ║"
          echo "║          Por favor revisa los logs anteriores              ║"
          echo "╚════════════════════════════════════════════════════════════╝"
          exit 1
        fi
